<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 配置自动扫描的包路径 -->
    <context:component-scan base-package="com.dubbo.service"/>

    <!-- 启用外部配置文件  -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.driver}"></property>
        <property name="jdbcUrl" value="${db.url}"></property>
        <property name="user" value="${db.user}"></property>
        <property name="password" value="${db.password}"></property>

        <!-- 连接池初始化时创建的连接数  也就是初始化加载就有连接数,需要调用就给你-->
        <property name="initialPoolSize" value="${db.initialPoolSize}"></property>
        <!-- 连接池中拥有的最大连接数  当扩充到最大连接数就不在扩充-->
        <property name="maxPoolSize" value="${db.maxPoolSize}"></property>
    </bean>

    <!-- 配置 EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置 JPA 提供商的适配器. 可以通过内部 bean 的方式来配置 -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
        </property>

        <!-- 配置实体类所在的包 -->
        <property name="packagesToScan" value="com.dubbo.entity"></property>
        <!-- 配置二级缓存的策略	@cacheable(true)的实体类将被缓存 -->
        <property name="sharedCacheMode" value="ENABLE_SELECTIVE"></property>
        <!-- 配置 JPA 的基本属性. 例如 JPA 实现产品的属性 -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.id.new_generator_mappings">false</prop><!-- 这个默认是true,只有设置为false才会使用id自增长 -->
                <prop key="hibernate.show_sql">true</prop><!-- 是否显示sql -->
                <prop key="hibernate.format_sql">true</prop><!-- 输出格式化后的sql,更方便查看 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 这里配置的是update策略,自动更新表 -->
                <prop key="hibernate.cache.use_second_level_cache">true</prop><!-- 是否使用二级缓存 -->
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
                </prop><!-- 这里指定使用外部介质使用的类,使用ehcache缓存 -->
                <prop key="hibernate.cache.use_query_cache">true</prop><!-- 是否使用查询缓存 -->
            </props>
        </property>
    </bean>

    <!-- 配置 JPA 使用的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"></property>
    </bean>

    <!-- 配置支持基于注解是事务配置（注解配置 事务） -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


</beans>