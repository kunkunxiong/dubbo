<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="../config/ehcache.xsd"
         updateCheck="false" monitoring="autodetect" dynamicConfig="true">

    <!-- 这里是ehcache3以下的配置文件	这里指定缓存存储的本地路径（磁盘存储路径） -->
    <diskStore path="C:\Users\Administrator\Desktop\cache" />

    <!--
        maxElementsInMemory(正整数):在内存中缓存的最大对象数量
        maxElementsOnDisk(正整数):在磁盘上缓存的最大对象数量，默认值为0，表示不限制。 最好设置，不然会内存溢出
        eternal:设定缓存对象保存的永久属性，默认为 false 。当为 true 时 timeToIdleSeconds、timeToLiveSeconds 失效。
        overflowToDisk设置为true就可以持久化,可以存入 指定磁盘
        timeToIdleSeconds（单位：秒）：对象空闲时间，指对象在多长时间没有被访问就会失效，也就是使用时间，如果被 重新使用则会刷新。只对eternal为false的有效。默认值0，表示一直可以访问。
        timeToLiveSeconds（单位：秒）：对象存活时间，指对象从创建到失效所需要的时间。只对eternal为false的有效，这个是固定时间，从创建开始就知道结束时间。默认值0，表示一直可以访问。
        diskPersistent：是否在磁盘上持久化。指重启jvm后，数据是否有效。默认为false。
        diskSpoolBufferSizeMB：DiskStore使用的磁盘大小，默认值30MB。每个cache使用各自的DiskStore(cache可以配置多个)。
        memoryStoreEvictionPolicy：如果内存中数据超过内存限制，向磁盘缓存时的策略。默认值LRU(最近最少使用，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清除缓存。)，可选FIFO(先进先出)、LFU(最少被使用，缓存的元素有一个hit属性，hit值最小的将会被清除缓存。)。
    -->
    <defaultCache
            maxElementsInMemory="1000"
            maxElementsOnDisk="10000000"
            eternal="false"
            overflowToDisk="true"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LRU">
    </defaultCache>

    <!-- name:Cache的唯一标识名称,这里可以配置多个cache 	在这里的name指定包名+类名可以自动为该类使用该ehcache缓存,也可以配置集合-->
    <cache name="test" maxElementsInMemory="1000"
           maxElementsOnDisk="10000000"
           eternal="false"
           overflowToDisk="true"
           timeToIdleSeconds="120"
           timeToLiveSeconds="120"
           diskExpiryThreadIntervalSeconds="120"
           memoryStoreEvictionPolicy="LRU" />

</ehcache>